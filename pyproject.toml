# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "fake-vcf"
version = "0.2.2"
description = "A fake vcf file generator "
readme = "README.md"
authors = ["fake-vcf <endast@gmail.com>"]
license = "MIT"
repository = "https://github.com/endast/fake-vcf"
homepage = "https://github.com/endast/fake-vcf"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [#! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"fake-vcf" = "fake_vcf.__main__:app"

[tool.poetry.dependencies]
python = "^3.9"

typer = "<0.13.0"
rich = "^13.8.1"
tqdm = "^4.66.5"
pyarrow = "^18.0.0"

[tool.poetry.dev-dependencies]
bandit = "^1.7.9"
black = { version = "^24.8.0", allow-prereleases = false }
darglint = "^1.8.1"
isort = { extras = ["colors"], version = "^5.13.2" }
pre-commit = "^3.8.0"
pydocstyle = "^6.3.0"
pylint = "^3.3.0"
pytest = "^8.3.3"
pyupgrade = "^3.17.0"
coverage = "^7.6.1"
coverage-badge = "^1.1.2"
pytest-html = "^4.0.2"
pytest-cov = "^5.0.0"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.9"
darglint = "^1.8.1"
isort = {extras = ["colors"], version = "^5.13.2"}
pre-commit = "^3.8.0"
pydocstyle = "^6.3.0"
pylint = "^3.3.0"
pytest = "^8.3.3"
pyupgrade = "^3.17.0"
coverage = "^7.6.1"
coverage-badge = "^1.1.2"
pytest-html = "^4.1.1"
pytest-cov = "^5.0.0"
black = "^24.8.0"
safety = "^3.2.7"
pytest-xdist = "^3.6.1"
pytest-random-order = "^1.1.1"
deptry = "^0.20.0"

[tool.poetry.group.bgzip]
optional = true

[tool.poetry.group.bgzip.dependencies]
biopython = "^1.84"


[tool.black]
# https://github.com/psf/black
target-version = ["py38"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 88

known_typing = ["typing", "types", "typing_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true



[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
markers = [
  "generate_vcf: generate vcf tests",
  "reference_import: reference import tests"

]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "fake_vcf"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
